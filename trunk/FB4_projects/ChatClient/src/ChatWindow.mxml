<?xml version="1.0" encoding="utf-8"?>
<s:Window xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx" width="550" height="400" creationComplete="window1_creationCompleteHandler(event)" close="window1_closeHandler(event)">
	<s:layout>
		<s:BasicLayout/>
	</s:layout>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import flash.events.Event;
			import flash.events.IOErrorEvent;
			import flash.events.MouseEvent;
			import flash.events.ProgressEvent;
			import flash.events.SecurityErrorEvent;
			import flash.net.Socket;
			import flash.utils.ByteArray;
			
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			
			private var _s:Socket=new Socket;
			
			protected function loginBtn_clickHandler(event:MouseEvent):void
			{
				if(this.userNameTxt.text==""){
					showMsg("请输入用户名");
				}else{
					startConnectServer();
				}
			}
			
			private function startConnectServer():void{
				_s.connect("localhost",8888);
				showMsg("正在连接服务器...");
			}
			
			private function eventHandler(event:Event):void{
				switch(event.type){
					case Event.CONNECT:
						showMsg("成功连接");
						
						var pkg:MsgPackger=new MsgPackger;
						pkg.msgType=MsgType.LOGIN;
						pkg.msgBody=userNameTxt.text;
						
						sendPkg(pkg);
						break;
					case Event.CLOSE:
						trace(event)
						showMsg("与服务器断开连接");
						break;
					case IOErrorEvent.IO_ERROR:
						
						break;
					case ProgressEvent.SOCKET_DATA:
						var bytes:ByteArray=new ByteArray;
						_s.readBytes(bytes);
						bytes.uncompress();
						
						unPkg(bytes.readObject());
						break;
					case SecurityErrorEvent.SECURITY_ERROR:
						
						break;
				}
			}
			
			public function showMsg(value:String):void{
				this.alertMsg.text=value;
			}
			
			private function unPkg(obj:Object):void{
				switch(obj.msgType){
					case MsgType.LOGIN_HANDLER:
						logMsg(obj.msgBody+" 登陆了");
						break;
					case MsgType.CURRENT_ONLINE_NUM:
						this.onlineNumTxt.text="在线人数："+obj.msgBody;
						break;
					case MsgType.LOGOUT:
						logMsg(obj.msgBody+" 离开了");
						break;
					case MsgType.CHAT:
						this.chatMsgOutTxt.appendText(obj.userName+" "+obj.date+"\n"+obj.msgBody+"\n");
						break;
				}
			}
			
			private function sendPkg(value:MsgPackger):void{
				var bytes:ByteArray=new ByteArray;
				bytes.writeObject(value);
				bytes.compress();
				
				_s.writeBytes(bytes);
				_s.flush();
			}
			

			protected function window1_creationCompleteHandler(event:FlexEvent):void
			{
				_s.addEventListener(Event.CONNECT,eventHandler);
				_s.addEventListener(Event.CLOSE,this.eventHandler);
				_s.addEventListener(IOErrorEvent.IO_ERROR,this.eventHandler);
				_s.addEventListener(ProgressEvent.SOCKET_DATA,eventHandler);
				_s.addEventListener(SecurityErrorEvent.SECURITY_ERROR,eventHandler);
			}
			
			private function logMsg(value:String):void{
				logTxt.appendText(value+"\n");
			}


			protected function sendMsgBtn_clickHandler(event:MouseEvent):void
			{
				sendMsg();
			}
			
			private function sendMsg():void{
				if(chatMsgInTxt.text==""){
					alertMsg.text="请输入聊天内容";
				}else{
					var pak:MsgPackger=new MsgPackger;
					pak.msgType=MsgType.CHAT;
					pak.msgBody=this.chatMsgInTxt.text;
					sendPkg(pak);
					
					this.chatMsgInTxt.text="";
				}
			}


			protected function chatMsgInTxt_keyUpHandler(event:KeyboardEvent):void
			{
				if(event.keyCode==Keyboard.ENTER){
					sendMsg();
				}
			}


			protected function window1_closeHandler(event:Event):void
			{
				_s.close();
			}

		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:Label x="10" y="10" text="用户名："/>
	<s:TextInput id="userNameTxt" x="66" y="5" text="" />
	<s:Button x="202" y="6" label="登陆" id="loginBtn" click="loginBtn_clickHandler(event)"/>
	<s:Label x="280" y="10" id="alertMsg" color="#FD0000"/>
	<s:Label id="onlineNumTxt" width="100" right="0"/>
	<s:TextArea top="25" id="logTxt" editable="false" width="100" height="100%" right="0"/>
	<s:TextArea id="chatMsgOutTxt" editable="false" top="30" bottom="100" width="100%" height="100%" right="105"/>
	<s:TextInput id="chatMsgInTxt" text="" width="100%" right="105" bottom="70" keyUp="chatMsgInTxt_keyUpHandler(event)"/>
	<s:Button id="sendMsgBtn" label="发送消息" right="105" bottom="30" click="sendMsgBtn_clickHandler(event)"/>
</s:Window>
